general:
  exp_name: test_kgin_kv_r4_zzy
  gpus: 3
  wandb_entity: 'itzzy'
  debug: False
  exp_save_root: 'experiments/'
  weights_save_frequency: 20
  # weights_save_frequency: 30
  acc_rate: &acc_rate [4]
  only_infer: &only_infer False

data:
  # csv file path
  # train_subjs: '/data0/chentao/data/LplusSNet/data/20coil/k_cine_multicoil_training.npy' # a demo
  # train_maps: '/data0/chentao/data/LplusSNet/data/20coil/csm_cine_multicoil_training.npy' # a demo
  # val_subjs: '/data0/chentao/data/LplusSNet/data/20coil/k_cine_multicoil_test.npy' # a demo
  # val_maps: '/data0/chentao/data/LplusSNet/data/20coil/csm_cine_multicoil_test.npy' # a demo
  train_subjs: '/opt/data/private/zhiyong/data/cine_base_data/k_cine_multicoil_training.npy' # a demo
  train_maps: '/opt/data/private/zhiyong/data/cine_base_data/csm_cine_multicoil_training.npy' # a demo
  val_subjs: '/opt/data/private/zhiyong/data/cine_base_data/k_cine_multicoil_test.npy' # a demo
  val_maps: '/opt/data/private/zhiyong/data/cine_base_data/csm_cine_multicoil_test.npy' # a demo
  # train_subjs: '/nfs/zzy/data/k_gin_data/k_cine_multicoil_training.npy' # a demo
  # train_maps: '/nfs/zzy/data/k_gin_data/csm_cine_multicoil_training.npy' # a demo
  # val_subjs: '/nfs/zzy/data/k_gin_data/k_cine_multicoil_test.npy' # a demo
  # val_maps: '/nfs/zzy/data/k_gin_data/csm_cine_multicoil_test.npy' # a demo
  # train_subjs: '/public/home/macong/zzy/data/k_cine_multicoil_training.npy' # a demo
  # train_maps: '/public/home/macong/zzy/data/csm_cine_multicoil_training.npy' # a demo
  # val_subjs: '/public/home/macong/zzy/data/k_cine_multicoil_test.npy' # a demo
  # val_maps: '/public/home/macong/zzy/data/csm_cine_multicoil_test.npy' # a demo
  # mask_root: '/data0/huayu/Aluochen/Mypaper5/e_192x18_acs4_R4.mat' # a demo
  # mask_root: '/data0/zhiyong/code/github/k-gin/masks/VISTA/random_172x232_acs16_3DR4.mat' # a demo
  # mask_root: '/data0/zhiyong/code/github/k-gin-kv/masks/VISTA/e_192x18_acs4_R4.mat' # a demo
  # mask_root: '/data0/zhiyong/code/github/k-gin/masks/VISTA/e_192x18_acs4_acs_lines4_R8.mat'
  # mask_root: '/nfs/zzy/code/k_gin_base/masks/VISTA/e_192x18_acs4_acs_lines4_R6.mat'
  # mask_root: '/nfs/zzy/code/k_gin_base/masks/VISTA/e_192x18_acs4_acs_lines4_R10.mat'
  # mask_root: 'masks/VISTA/e_192x18_acs4_acs_lines4_R8.mat'
  mask_root: 'masks/VISTA/e_192x18_acs4_R4.mat'
  # data_root: '/nfs/zzy/data/k_gin_data'
  data_root: '/opt/data/private/zhiyong/data/cine_base_data'
  # data_root: '/data0/chentao/data/LplusSNet/data/20coil'
  # data_root: '/public/home/macong/zzy/data'
  mask_pattern: VISTA
  acc_rate: *acc_rate
  dtype: complex128
  training_patch_time: 16
  only_infer: *only_infer

training:
  num_epochs: &epochs 300
  # num_epochs: &epochs 1
  # warmup_epoch: 0
  warmup_epoch: 30
  batch_size: 4
  # num_workers: 4
  num_workers: 5
  # num_workers: 1
  # restore_ckpt: '/nfs/zzy/code/k_gin_base/experiments/test_k_gin'
  restore_ckpt: '/opt/data/private/zhiyong/code/github/itzzy_git/k_gin_kv/experiments/test_kgin_kv_r4_zzy'
  # restore_ckpt: '/data0/zhiyong/code/github/itzzy_git/k_gin_base/experiments/test_kgin_kv_r4_zzy'
  # restore_ckpt: '/public/home/macong/zzy/data/code/k_gin_kv/experiments/test_kgin_kv_r8'
  # restore_training: False
  restore_training: True
  use_mixed_precision: True  # differ # for complexCNN this must be set False
  optim_weight_decay: 0.05
  
network:
  which: KInterpolator
  KInterpolator:
    img_size: [18,192,192]
    patch_size: 4
    embed_dim: 512
    depth: 12
    num_heads: 16
    decoder_embed_dim: 512
    decoder_depth: 8
    decoder_num_heads: 16
    mlp_ratio: 4.
    single_coil: True

    in_chans: 384
    norm_layer: nn.LayerNorm
    act_layer: nn.GELU
    ref_repl_prior_denoiser: True

    xt_y_tuning: True
    xt_y_embed_dim: 512
    xt_y_depth: 8
    xt_y_num_heads: 8

    yt_x_tuning: True
    yt_x_embed_dim: 512
    yt_x_depth: 8
    yt_x_num_heads: 8

    xy_t_patch_tuning: True
    xy_t_patch_embed_dim: 512
    xy_t_patch_depth: 8
    xy_t_patch_num_heads: 8

loss_base: &loss
  k_recon_loss_combined:
    k_loss_decay: 0.6
    k_loss_list: [ 'L1', 'HDR', 'HDR', 'HDR']
    k_loss_weighting: [ 1,1,1,1 ]
    eps: &HDR_eps 0.5
  k_recon_loss:
    mode: L1
  photometric:
    mode: L2  # can be charbonnier, L1, L2
  HDR:
    eps: *HDR_eps
  psnr:
    max_value: on_fly
    magnitude_psnr: True
  use_weighting_mask: False
  cardiac_crop_quantitative_metric: False
  only_maskout: True

train_loss:
    <<: *loss
    which: ['k_recon_loss_combined', 'k_recon_loss', 'photometric']
    loss_weights: [1,1,1]


eval_loss:
    <<: *loss
    which: ['k_recon_loss','photometric','psnr']
    loss_weights: [1, 1, 1]

optimizer:
  which: AdamW
  AdamW:
    lr: &lr 0.0001
    eps: !!float 1e-8
    betas: [0.9, 0.95]
#    weight_decay: 0.00001

scheduler:
  lr: *lr
  min_lr: 0.0
  # warmup_epochs: 5
  warmup_epochs: 30
  epochs: *epochs


# general:
#   # exp_name: Test
#   exp_name: test_zzy_r10
#   gpus: 3
#   # wandb_entity: 'klkjx'
#   wandb_entity: 'itzzy'
#   debug: False
#   exp_save_root: 'experiments/'
#   weights_save_frequency: 20
#   acc_rate: &acc_rate [4]
#   only_infer: &only_infer False

# data:
#   # csv file path
#   # train_subjs: '/data0/chentao/data/LplusSNet/data/20coil/k_cine_multicoil_training.npy' # a demo
#   # train_maps: '/data0/chentao/data/LplusSNet/data/20coil/csm_cine_multicoil_training.npy' # a demo
#   # val_subjs: '/data0/chentao/data/LplusSNet/data/20coil/k_cine_multicoil_test.npy' # a demo
#   # val_maps: '/data0/chentao/data/LplusSNet/data/20coil/csm_cine_multicoil_test.npy' # a demo
#   train_subjs: '/nfs/zzy/data/k_gin_data/k_cine_multicoil_training.npy' # a demo
#   train_maps: '/nfs/zzy/data/k_gin_data/csm_cine_multicoil_training.npy' # a demo
#   val_subjs: '/nfs/zzy/data/k_gin_data/k_cine_multicoil_test.npy' # a demo
#   val_maps: '/nfs/zzy/data/k_gin_data/csm_cine_multicoil_test.npy' # a demo

#   # mask_root: '/data0/huayu/Aluochen/Mypaper5/e_192x18_acs4_R4.mat' # a demo
#   # R=8 8倍欠采样
#   # mask_root: '/data0/zhiyong/code/github/itzzy_git/k-gin_kv/masks/VISTA/e_192x18_acs4_acs_lines4_R8.mat'
#   # R=6 6倍欠采样
#   # mask_root: '/data0/zhiyong/code/github/itzzy_git/k-gin_kv/masks/VISTA/e_192x18_acs4_acs_lines4_R6.mat'

#   #r=10 10倍欠采样
#   mask_root: '/nfs/zzy/code/k_gin_kv/masks/VISTA/e_192x18_acs4_acs_lines4_R10.mat'
#   # data_root: '/data0/chentao/data/LplusSNet/data/20coil/'
#   data_root: '/nfs/zzy/data/k_gin_data'
#   mask_pattern: VISTA
#   acc_rate: *acc_rate
#   dtype: complex128
#   training_patch_time: 16
#   only_infer: *only_infer

# training:
#   # num_epochs: &epochs 300
#   num_epochs: &epochs 1
#   warmup_epoch: 0
#   # warmup_epoch: 30
#   batch_size: 2
#   # num_workers: 4
#   num_workers: 1
#   restore_ckpt: '/data0/zhiyong/code/github/itzzy_git/k-gin_kv/experiments/test_zzy_r10'
#   restore_training: False
#   # restore_training: True
#   use_mixed_precision: True  # differ # for complexCNN this must be set False
#   optim_weight_decay: 0.05
  
# network:
#   which: KInterpolator
#   KInterpolator:
#     img_size: [18,192,192]
#     patch_size: 4
#     embed_dim: 512
#     depth: 12
#     num_heads: 16
#     decoder_embed_dim: 512
#     decoder_depth: 8
#     decoder_num_heads: 16
#     mlp_ratio: 4.
#     single_coil: True

#     in_chans: 384
#     norm_layer: nn.LayerNorm
#     act_layer: nn.GELU
#     ref_repl_prior_denoiser: True

#     xt_y_tuning: True
#     xt_y_embed_dim: 512
#     xt_y_depth: 8
#     xt_y_num_heads: 8

#     yt_x_tuning: True
#     yt_x_embed_dim: 512
#     yt_x_depth: 8
#     yt_x_num_heads: 8

#     xy_t_patch_tuning: True
#     xy_t_patch_embed_dim: 512
#     xy_t_patch_depth: 8
#     xy_t_patch_num_heads: 8

# loss_base: &loss
#   k_recon_loss_combined:
#     k_loss_decay: 0.6
#     k_loss_list: [ 'L1', 'HDR', 'HDR', 'HDR']
#     k_loss_weighting: [ 1,1,1,1 ]
#     eps: &HDR_eps 0.5
#   k_recon_loss:
#     mode: L1
#   photometric:
#     mode: L2  # can be charbonnier, L1, L2
#   HDR:
#     eps: *HDR_eps
#   psnr:
#     max_value: on_fly
#     magnitude_psnr: True
#   use_weighting_mask: False
#   cardiac_crop_quantitative_metric: False
#   only_maskout: True

# train_loss:
#     <<: *loss
#     which: ['k_recon_loss_combined', 'k_recon_loss', 'photometric']
#     loss_weights: [1,1,1]


# eval_loss:
#     <<: *loss
#     which: ['k_recon_loss','photometric','psnr']
#     loss_weights: [1, 1, 1]

# optimizer:
#   which: AdamW
#   AdamW:
#     lr: &lr 0.0001
#     eps: !!float 1e-8
#     betas: [0.9, 0.95]
# #    weight_decay: 0.00001

# scheduler:
#   lr: *lr
#   min_lr: 0.0
#   # warmup_epochs: 5
#   warmup_epochs: 30
#   epochs: *epochs
